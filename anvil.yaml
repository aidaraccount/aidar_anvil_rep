allow_embedding: false
db_schema:
  users:
    client: none
    columns:
    - admin_ui: {order: -0.125, width: 84}
      name: user_id
      type: number
    - admin_ui: {order: 0, width: 226}
      name: email
      type: string
    - admin_ui: {order: 1, width: 135}
      name: enabled
      type: bool
    - admin_ui: {width: 200}
      name: last_login
      type: datetime
    - admin_ui: {order: 3, width: 200}
      name: password_hash
      type: string
    - admin_ui: {width: 200}
      name: n_password_failures
      type: number
    - admin_ui: {order: 1.125, width: 141}
      name: confirmed_email
      type: bool
    - admin_ui: {order: 1.1875, width: 200}
      name: signed_up
      type: datetime
    - admin_ui: {width: 225}
      name: email_confirmation_key
      type: string
    - admin_ui: {order: 9, width: 200}
      name: remembered_logins
      type: simpleObject
    - admin_ui: {order: -0.15625, width: 137}
      name: expiration_date
      type: date
    - admin_ui: {order: 0.5, width: 112}
      name: first_name
      type: string
    - admin_ui: {order: 0.75, width: 117}
      name: last_name
      type: string
    - admin_ui: {order: -0.5, width: 112}
      name: customer_id
      type: number
    - admin_ui: {order: 1.1484375, width: 200}
      name: welcome_email_sent
      type: bool
    - admin_ui: {order: -0.25, width: 200}
      name: customer_name
      type: string
    - admin_ui: {order: 1.0625, width: 200}
      name: active
      type: bool
    - admin_ui: {order: 1.09375, width: 200}
      name: admin
      type: bool
    - admin_ui: {order: -0.1875, width: 200}
      name: plan
      type: string
    server: full
    title: Users
  waiters:
    client: full
    columns:
    - admin_ui: {order: 3, width: 200}
      name: Mail
      type: string
    - admin_ui: {order: 2, width: 200}
      name: Date
      type: datetime
    server: full
    title: Waiters
dependencies:
- dep_id: dep_h86ijk4pnzr0f
  resolution_hints: {app_id: C6ZZPAPN4YYF5NVJ, name: Anvil Extras, package_name: anvil_extras}
  version: {dev: false}
- dep_id: dep_e8dhk486iirai
  resolution_hints: {app_id: 5YU7BBT6T5O7ZNOX, name: Anvil Labs, package_name: anvil_labs}
  version: {branch: master}
metadata: {description: 'AIDAR, aidar ai, aidar-ai, AI driven A&R, music, label, data, ml, ai, A&R', logo_img: 'asset:pics/Favicon_orange.JPG', title: AIDAR - AI driven A&R}
name: AIDAR
native_deps:
  head_html: "<!-- 1. integrate font awesome  -->\n<script src=\"https://kit.fontawesome.com/f0d74f0b0e.js\" crossorigin=\"anonymous\"></script>\n\n\n<!-- 2. integrate Spotify Web Playback SDK  -->\n<script src=\"_/theme/Spotify_Config.js\"></script>\n<script src=\"_/theme/Spotify_WebPlayback.js\"></script>\n<script src=\"_/theme/Spotify_Player_New.js\"></script>\n\n\n<!-- 3. FitLikelihoodCircle for Observe_Radar -->\n<script>\n  function observeFitLikelihoodCircle() {\n    let displays = document.querySelectorAll('.note-display');\n    const transitionDuration = 900;\n    \n    displays.forEach(display => {\n\n      // // Prevent re-initialization by checking for existing styles\n      // if (display.dataset.initialized) return;\n      \n      let note = parseFloat(display.dataset.note);\n      console.log(\"Native Libraries - THIS IS THE NOTE VALUE: \", note)\n      let [int, dec] = display.dataset.note.split('.');\n      [int, dec] = [Number(int), Number(dec)];\n      \n      strokeTransition(display, note);\n  \n      increaseNumber(display, int, 'int');\n      // increaseNumber(display, dec, 'dec');\n      \n      // // Mark as initialized\n      // display.dataset.initialized = true;\n      });\n  \n    function increaseNumber(display, number, className) {\n      let element = display.querySelector(`.percent__${className}`),\n          decPoint = className === 'int' ? '%' : '',\n          interval = 900 / number,\n          counter = 0;\n  \n      let increaseInterval = setInterval(() => {\n        if (counter === number) { window.clearInterval(increaseInterval); }\n  \n        element.textContent = counter + decPoint;\n        counter++;\n      }, interval);\n    }\n    \n    function strokeTransition(display, note) {\n      let progress = display.querySelector('.circle__progress--fill');\n      let radius = progress.r.baseVal.value;\n      let circumference = 2 * Math.PI * radius;\n      let offset = circumference * (100 - note) / 100;\n  \n      progress.style.setProperty('--initialStroke', circumference);\n      progress.style.setProperty('--transitionDuration', `${transitionDuration}ms`);\n  \n      setTimeout(() => progress.style.strokeDashoffset = offset, 1000);\n    }\n  };\n</script>\n\n\n<!-- 4. hideNavBar.js navbar control (optimized inline version) -->\n<script>\n// 1. Cached DOM elements for performance optimization\nlet cachedElements = null;\nlet debugMode = false; // Disabled in production\n\n// 2. Initialize DOM element cache\nfunction initializeElementCache() {\n  if (cachedElements) return cachedElements;\n  \n  cachedElements = {\n    sidebar: document.getElementById('left-sidebar') || document.querySelector('.sidebar'),\n    button: document.getElementById('nav-button') || document.querySelector('.nav-button'),\n    content: document.querySelector('.main-content-move'),\n    contentNav: document.querySelector('.main-content-move-nav'),\n    spotifyFooter: document.querySelector('.anvil-role-cap-spotify-footer')\n  };\n  \n  if (debugMode) {\n    console.log(\"[NAVBAR] Elements cached:\", {\n      sidebar: !!cachedElements.sidebar,\n      button: !!cachedElements.button,\n      content: !!cachedElements.content,\n      contentNav: !!cachedElements.contentNav,\n      spotifyFooter: !!cachedElements.spotifyFooter\n    });\n  }\n  \n  return cachedElements;\n}\n\n// 3. Main navbar visibility control function\nfunction navbar_noModel_noSubs(visible) {\n  // Ensure DOM is ready\n  if (document.readyState !== 'complete' && document.readyState !== 'interactive') {\n    setTimeout(() => navbar_noModel_noSubs(visible), 50);\n    return;\n  }\n  \n  try {\n    // Re-initialize cache if DOM was re-rendered by Anvil (old nodes become detached)\n    cachedElements = null;\n    const elements = initializeElementCache();\n    const isMobile = window.innerWidth <= 767;\n    \n    // 4. Handle sidebar visibility\n    if (elements.sidebar) {\n      elements.sidebar.style.setProperty('display', visible ? \"block\" : \"none\", 'important');\n      // Position sidebar for mobile/desktop and ensure off-canvas when hidden\n      if (visible) {\n        elements.sidebar.style.left = isMobile ? '-200px' : '0px';\n      } else {\n        elements.sidebar.style.left = isMobile ? '-200px' : '-250px';\n      }\n    }\n    \n    // 5. Handle navigation button visibility and positioning\n    if (elements.button) {\n      elements.button.style.setProperty('display', visible ? \"block\" : \"none\", 'important');\n      if (visible) {\n        elements.button.style.left = isMobile ? '0px' : '250px';\n      } else {\n        elements.button.style.left = '0px';\n      }\n    }\n    \n    // 6. Adjust content margins based on sidebar visibility\n    const marginLeft = (visible && elements.sidebar && !isMobile) ? '250px' : '0px';\n    \n    if (elements.content) {\n      elements.content.style.setProperty('margin-left', marginLeft, 'important');\n    }\n    \n    if (elements.contentNav) {\n      elements.contentNav.style.setProperty('margin-left', marginLeft, 'important');\n    }\n    \n    // 7. Ensure Spotify footer remains visible\n    if (elements.spotifyFooter) {\n      elements.spotifyFooter.style.display = \"block\";\n    }\n    \n    if (debugMode) {\n      console.log(`[NAVBAR] Navbar ${visible ? 'shown' : 'hidden'}, mobile: ${isMobile}`);\n    }\n    \n  } catch (error) {\n    console.error(\"[NAVBAR] Error in navbar_noModel_noSubs:\", error);\n  }\n}\n\n// Set a global flag to indicate this script is loaded\nwindow.hideNavBarLoaded = true;\nconsole.log(\"[NAVBAR] hideNavBar optimized inline version loaded\");\n</script>\n\n\n<!-- 5. updateLoadingSpinnerMargin -->\n<script>  \n  function updateLoadingSpinnerMargin(marginValue) {\n    // Define the new CSS with the given margin value\n    const newCSS = `\n      #loadingSpinner {\n        margin-left: ${marginValue} !important;\n      }\n    `;\n    \n    // Try to find an existing style tag with our custom ID\n    let styleTag = document.querySelector(\"#customThemeOverride\");\n    \n    // If not found, create a new one and append it to the head\n    if (!styleTag) {\n      styleTag = document.createElement(\"style\");\n      styleTag.id = \"customThemeOverride\";\n      document.head.appendChild(styleTag);\n    }\n    \n    // Update the style tag's content with the new CSS\n    styleTag.innerHTML = newCSS;\n  }\n</script>\n\n\n<!-- 6. clearModelNavigation -->\n<script>\n  // Clear all models from the navigation\n  function clearModelNavigation() {\n    try {\n      console.log('[clearModelNavigation] Removing all models from navigation');\n\n      // 1. Find the nav_models container and the ul.linear-panel inside it\n      const navModels = document.querySelector('.anvil-role-nav_models');\n      if (!navModels) {\n        console.warn('[clearModelNavigation] nav_models container not found');\n        return;\n      }\n\n      const linearPanel = navModels.querySelector('ul.linear-panel');\n      if (!linearPanel) {\n        console.warn('[clearModelNavigation] linear-panel not found inside nav_models');\n        return;\n      }\n\n      // 2. Remove all child elements (list items) from the linear panel\n      // Convert live HTMLCollection to static array to safely remove\n      const items = Array.from(linearPanel.children);\n\n      // Remove all except the first\n      for (let i = 1; i < items.length; i++) {\n        linearPanel.removeChild(items[i]);\n      }\n\n      console.log('[clearModelNavigation] All models have been removed from navigation');\n    } catch (error) {\n      console.error('[clearModelNavigation] Error:', error);\n    }\n  }\n</script>"
package_name: AIDAR
runtime_options:
  client_version: '3'
  server_spec: null
  server_spec_disabled: {base: python310-standard, requirements: ''}
  server_version: python3-full
  version: 2
secrets:
  STRIPE_SECRET_KEY_LIVE:
    type: secret
    value: {VBNUUYXQ55WVDCOZ: xXU+bot+YMgM6//zw/d/IF52rPrtNozeZYf5RtHPrCYlAa8ezin6Amx7vyAKOwvWOLYWEYX2iS9dsTrHo6iLw9MuMisI3NM2vOdSugpoYYyEKV3ZDd6P30sgbmfECLfP9wJopSEvQAeYdKN31PAfA0Yj58B3PpxyNXR4O4rMUCQBqWT8MWUBqAJLU3E0/EAIJ2TO5z/eXO2msNFUOVAuaToWv1LsmI5dR7RiU47ZVCQplbqZJa+GDPL9idP75mLWU28ntJimuu56mw==}
  STRIPE_SECRET_KEY_SANDBOX:
    type: secret
    value: {VBNUUYXQ55WVDCOZ: GLjsplZCONUfLgQNj1s3mj4wAc5EhMDf082KgCkr62+luKgzUL6k3KTjBqznnTnfD6VDh4Zd2A2nl0SpjpyiitjBsito+LxPS06lyBADxf3selsIaFg1gDK4BaxbzGcZrsVduIV7lImr2d7XIr2841J7Rn2iTlQjCyawLBNtAJ7OQYmZqvCgc/Uepa8W/F5mHEQV79Eire9ddp98NMpVNhguqyZBCjxejMhOqwmG1gIdIhtpv+nOvLypoiIFX2VHh3VnVe1G8RKCwQ==}
services:
- client_config: {}
  server_config: {}
  source: /runtime/services/tables.yml
- client_config: {allow_remember_me: true, allow_signup: true, confirm_email: true, enable_automatically: true, remember_me_days: 365, use_email: true, use_token: false}
  server_config:
    email_content:
      confirm_address: {html: '<h2>Welcome to AIDAR,</h2><p>your AI-Agent for Artist Scouting.</p><p><br></p><p>Please click the following link to confirm that this is your account: {{confirm_link}}</p><p><br></p><p>If we can help you with anything, please reach out to us: team@aidar.ai</p><p><br></p><p>Thanks,</p><p>Your AIDAR team</p>'}
      reset_password:
        html: "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Password Reset Email</title>\n    <style>\n        @font-face {\n            font-family: 'GS-regular';\n            src: url(\"_/theme/fonts/GeneralSans-Regular.otf\") format(\"opentype\");\n        }\n          body, p, h1, h2, h3 {\n            font-family: 'GS-regular', Arial, sans-serif;\n          }\n        body {\n            background-color: #f4f4f4;\n            margin: 0;\n            padding: 0;\n            color: #333;\n        }\n        .companylogo {\n          font-size: 36px;\n          color: black;\n        }\n        .orangedot {\n          color: rgb(249,101,48);\n        }\n        .email-container {\n            max-width: 600px;\n            margin: 0 auto;\n            background-color: white;\n            padding: 20px;\n            border-radius: 8px;\n            box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1);\n        }\n\n        .email-header {\n            text-align: center;\n            margin-bottom: 20px;\n        }\n\n        .email-header img {\n            max-width: 150px;\n        }\n\n        .email-body {\n            padding: 20px;\n            text-align: center;\n        }\n\n        .email-body p {\n            font-size: 16px;\n            line-height: 1.6;\n            margin: 15px 0;\n        }\n\n        .reset-button {\n            display: inline-block;\n            padding: 12px 20px;\n            background-color: #1f0b3b;\n            color: white;\n            text-decoration: none;\n            border-radius: 4px;\n            font-size: 16px;\n        }\n\n        .email-footer {\n            margin-top: 20px;\n            text-align: center;\n            font-size: 14px;\n            color: #555;\n        }\n\n    </style>\n</head>\n<body>\n    <div class=\"email-container\">\n        <!-- Logo Section -->\n        <div class=\"email-header\">\n           <h1 class=\"companylogo\"><span class=\"orangedot\">.</span>AIDAR</h1>\n        </div>\n\n        <!-- Email Body -->\n        <div class=\"email-body\">\n            <p>Hello,</p>\n            <p>You are receiving this email because a password reset request was made for your account. If this was you, please click the link below to reset your password.</p>\n            \n            <p>{{reset_link}}</p>\n            \n            <p>If you did not request this email, please ignore it or contact us if you have any concerns.</p>\n            <p>Have a great day!</p>\n        </div>\n\n        <!-- Footer -->\n        <div class=\"email-footer\">\n            <p>Best regards,<br>Your AIDAR Team</p>\n        </div>\n    </div>\n</body>\n</html>\n"
        subject: Reset your password
    email_from_address: team@aidar.ai
    user_table: users
  source: /runtime/services/anvil/users.yml
- client_config: {}
  server_config: {}
  source: /runtime/services/stripe.yml
- client_config: {}
  server_config: {}
  source: /runtime/services/anvil/secrets.yml
startup: {module: startup, type: module}
startup_form: null
