components:
- layout_properties: {slot: text-area-slot}
  name: feedback_comment
  properties: {height: '100', placeholder: 'Share your thoughts, ideas, or any issues you’ve encountered...'}
  type: TextArea
- event_bindings: {click: submit_feedback_click}
  layout_properties: {slot: submit-button}
  name: button_1
  properties: {role: call-to-action-button, text: Submit}
  type: Button
- layout_properties: {slot: rating}
  name: label_2
  properties: {align: center, text: 'How satisfied are you with AIDAR overall?​'}
  type: Label
- layout_properties: {slot: Initial-message}
  name: label_1
  properties:
    align: center
    text: |-
      Got a problem, suggestion, or anything you'd like to share?​
      Let us know - we’re always looking to improve!​
  type: Label
container:
  properties:
    html: "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Login Page</title>\n  <style>\n    * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n    }\n    body, html {\n      height: 100%;\n      overflow: hidden;\n      /* font-family: GB-regular; */\n    }\n    .feedback-form-container {\n      position: absolute;\n      top: 20%;\n      left: 50%;\n      transform: translate(-50%, 0%);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      /* background-color: white; */\n      /* background: url(\"_/theme/Stock%20Images/Backgrounds/benefits-background.png\"); */\n      background: linear-gradient(to top left, rgb(43, 24, 72) 50%, rgb(134, 59, 59));\n      box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.2);\n      border-radius: 8px;\n      padding: 40px;\n      height: 500px;\n      width: 500px;\n      z-index: 1;\n      color:white;\n    }\n    .feedback-form {\n      /* background-color: white;\n      padding: 20px;\n      box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\n      border-radius: 8px;\n      max-width: 320px; */\n      width: 100%;\n      height: 100%\n    }\n    .feedback-form h2 {\n      margin-bottom: 20px;\n      text-align: center;\n      font-size: 24px;\n      color: white;\n    }\n    .feedback-form input {\n      width: 100%;\n      padding: 12px;\n      margin-bottom: 15px;\n      border: 1px solid #ccc;\n      border-radius: 4px;\n      font-size: 16px;\n    }\n    .feedback-form input[type=\"checkbox\"] {\n      width: auto;\n    }\n    .remember-me {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      font-size: 14px;\n    }\n    .feedback-form button {\n      width: 100%;\n      padding: 12px;\n      background-color: rgb(31, 11, 59);\n      color: white;\n      font-size: 16px;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n      transition: background-color 0.3s ease;\n    }\n    .feedback-form button:hover {\n      background-color: orange;\n    }\n    .feedback-form .submit-button {\n      width: 100%;\n      padding: 12px;\n      background-color: rgb(31, 11, 59);\n      color: white;\n      font-size: 16px;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n      transition: background-color 0.3s ease;\n    }\n    .feedback-form .submit-button:hover {\n      background-color: orange;\n    }\n    .modal-body {\n      padding: 0;\n    } \n    .stars-container {\n      display: flex;\n      justify-content: center;\n      gap: 5px;\n      font-size: 30px;\n      cursor: pointer;\n      padding: 0px 0 20px 0;\n    }\n    .star {\n      color: #ccc; /* Faded stars */\n      transition: color 0.3s ease;\n    }\n    .star.highlight {\n      /* color: #E95F30; /* Highlighted stars */\n      background: linear-gradient(to bottom right, rgb(250, 250, 125) 10%, rgb(234, 59, 99));\n      color: transparent;\n      background-clip: text;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"feedback-form-container\">\n    <div class=\"feedback-form\">\n      <h2><img src=\"_/theme/pics/AIDAR_white_logo_small.png\" style=\"height:30px; margin:0 0 10px 3px;\"></h2>\n      <h2 style=\"height:30px; margin:0 0 10px 3px;\"> Help us improve</h2>\n      <div anvil-slot=\"Initial-message\">\n        <div anvil-if-slot-empty=\"Initial-message\">Initial message</div>\n      </div>\n      <div anvil-slot=\"text-area-slot\">\n        <div anvil-if-slot-empty=\"text-area-slot\">EMPTY PLACE FOR A COMPONENT</div>\n      </div>\n      <!-- <textarea class=\"comment\" rows=\"5\" style=\"padding:10px; color:black; width:100%; border-radius:10px\" placeholder=\"Share your thoughts, ideas, or any issues you’ve encountered...\"></textarea> -->\n      <div anvil-slot=\"rating\">\n        <div anvil-if-slot-empty=\"rating\">Rating</div>\n      </div>\n      <div class=\"stars-container\">\n      </div>\n      <input type=\"hidden\" id=\"rating-input\" value=\"0\">\n      <div anvil-slot=\"submit-button\">\n        <div anvil-if-slot-empty=\"submit-button\">Submit-button</div>\n      </div>\n    </div>\n  </div>\n  <!-- <input type=\"hidden\" id=\"rating-input\" name=\"rating\" value=\"0\"> -->\n</body>\n\n<script>\n  // document.addEventListener('DOMContentLoaded', function() {\n  //   // function to initialize the star rating\n    function initializeStarRating() {\n      const container = document.querySelector('.stars-container');\n      // const stars = document.querySelector('.stars-container' '.star');\n      \n      // Clear existing stars to prevent duplication\n      container.innerHTML = '';\n      \n      // Create and append the stars\n      for (let i = 0; i < 5; i++) {\n        const star = document.createElement('span');\n        // star.className = 'fa fa-star-o star'; // Add initial unhighlighted star class\n        star.className = 'star'; // Add star class ONLY\n        star.dataset.index = i; // Assign a unique index to each star\n        star.innerHTML = '&#9836;'\n        container.appendChild(star);\n      }\n\n      // Re-select stars after re-creating them\n      const stars = container.querySelectorAll('.star');\n\n      // Variable to store the selected rating\n      let selectedRating = 0;\n\n      // Add event listeners to each star\n      stars.forEach((star, index) => {\n        // Highlight stars on hover\n        star.addEventListener('mouseover', () => {\n          highlightStars(index);\n        });\n      \n        // Remove highlight when the mouse leaves\n        star.addEventListener('mouseout', () => {\n          resetStars();\n        });\n      \n        // Set stars on click\n        star.addEventListener('click', () => {\n          setRating(index);\n        });\n      });\n      \n      // Function to highlight stars up to the hovered star\n      function highlightStars(index) {\n        stars.forEach((star, i) => {\n          if (i <= index) {\n            star.classList.add('highlight');\n            // star.classList.remove('fa-star-o');\n            // star.classList.add('fa-star');\n          } else {\n            star.classList.remove('highlight');\n            // star.classList.remove('fa-star');\n            // star.classList.add('fa-star-o');\n          }\n        });\n      }\n      // Function to reset stars to their default state\n      function resetStars() {\n        stars.forEach(star => {\n          star.classList.remove('highlight');\n          // star.classList.remove('fa-star');\n          // star.classList.add('fa-star-o');\n        });\n        highlightStars(selectedRating - 1); // Preserve the clicked rating\n      }\n      // Function to reset stars to their default state\n      // function resetStars() {\n      //   stars.forEach(star => star.classList.remove('highlight'));\n      //   highlightStars(selectedRating - 1); // Preserve the clicked rating\n      // }\n      // Function to set the rating on click\n      function setRating(index) {\n        selectedRating = index + 1;\n        document.getElementById('rating-input').value = selectedRating; // Update the hidden field\n        highlightStars(index);\n        console.log('Selected Rating:', document.getElementById('rating-input').value); // You can handle this value (e.g., send it to your server)\n      }\n    }\n    // Initialize the star rating system\n    initializeStarRating();\n\n    document.addEventListener('reopenFeedbackForm', () => {\n      initializeStarRating();\n    });\n  // });\n\n  \n  document.dispatchEvent(new Event('reopenFeedbackForm'));\n</script>"
  type: HtmlTemplate
custom_component: true
is_package: true
